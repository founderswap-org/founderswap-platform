name: Check Release Version

on:
  pull_request:
    branches:
      - main

jobs:
  check_version:
    runs-on: ubuntu-latest
    steps:
      - name: Ensure PR is from a release branch
        run: |
          PR_BRANCH="${{ github.event.pull_request.head.ref }}"
          if [[ ! "$PR_BRANCH" =~ ^release/v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "❌ The PR does not come from a release branch (expected: release/vX.Y.Z)"
            exit 1
          fi

      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Get current main version
        id: current_version
        run: echo "VERSION=$(jq -r .version package.json)" >> $GITHUB_ENV

      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Get PR branch version
        id: pr_version
        run: echo "PR_VERSION=$(jq -r .version package.json)" >> $GITHUB_ENV

      - name: Compare versions
        run: |
          if [ "$(printf '%s\n' "$VERSION" "$PR_VERSION" | sort -V | tail -n 1)" != "$PR_VERSION" ]; then
            echo "❌ The release version ($PR_VERSION) is not greater than the current version ($VERSION)."
            exit 1
          fi
